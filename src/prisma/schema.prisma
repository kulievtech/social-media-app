datasource db {
    provider = "mongodb"
    url      = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

// User model

enum AccountStatus {
    ACTIVE
    INACTIVE
}

type Place {
    city    String
    region  String
    country String
}

type WorkExperience {
    startYear Int
    endYear   Int
    company   String
    position  String
}

type Education {
    startYear Int
    endYear   Int
    school    String
    degree    String
    major     String
}

model User {
    id                               String           @id @default(auto()) @map("_id") @db.ObjectId
    email                            String           @unique
    password                         String
    firstName                        String
    lastName                         String
    currentPlace                     Place?
    education                        Education[]
    workExperience                   WorkExperience[]
    dateOfBirth                      DateTime
    status                           AccountStatus    @default(INACTIVE)
    activationToken                  String?
    passwordResetToken               String?
    passwordResetTokenExpirationDate DateTime?
    createdAt                        DateTime         @default(now())
    updatedAt                        DateTime         @updatedAt
}

// Post model

enum PostVisibility {
    PUBLIC
    PRIVATE
    FRIENDS_ONLY
}

type Comment {
    id     String
    text   String
    userId String @db.ObjectId
}

model Post {
    id         String         @id @default(auto()) @map("_id") @db.ObjectId
    content    String
    comments   Comment[]
    userId     String         @db.ObjectId
    visibility PostVisibility @default(PUBLIC)
    likeCount  Int            @default(0)
    createdAt  DateTime       @default(now())
    updatedAt  DateTime       @updatedAt
}

model Like {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    userId    String   @db.ObjectId
    postId    String   @db.ObjectId
    likedTime DateTime @default(now())
}

// Friendship model

enum FrienshipStatus {
    PENDING
    ACCEPTED
}

model Friendship {
    id        String          @id @default(auto()) @map("_id") @db.ObjectId
    userAId   String          @db.ObjectId
    userBId   String          @db.ObjectId
    status    FrienshipStatus @default(PENDING)
    createdAt DateTime        @default(now())
    updatedAt DateTime        @updatedAt
}
